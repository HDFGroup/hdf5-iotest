DARSHAN_LOGS = `$(DARSHAN_DIR)/bin/darshan-config --log-path`
DATE = `date '+%Y/%-m/%d'`

CC = mpicc

CFLAGS = -Wextra -O2 -I$(HDF5_DIR)/include

LDFLAGS := ${LDFLAGS}
LDFLAGS += -L${HDF5_DIR}/lib -lhdf5 \
	   -Wl,-no-as-needed -L$(PROFILER_LIB_DIR) -lprofiler

SHELL := bash
.ONESHELL:
.SHELLFLAGS := -eu -o pipefail -c
.DELETE_ON_ERROR:
MAKEFLAGS += --warn-undefined-variables
#MAKEFLAGS += --no-builtin-rules

ifeq ($(origin .RECIPEPREFIX), undefined)
  $(error This Make does not support .RECIPEPREFIX. Please use GNU Make 4.0 or later)
endif
.RECIPEPREFIX = >

build: out/hdf5_iotest
.PHONY: build

dirs:
> mkdir -p out tmp

csrc = $(shell find src -name *.c)
ini = src/hdf5_iotest.ini src/combinator.sh
obj = $(csrc:.c=.o)

out/hdf5_iotest: $(obj)
> mkdir -p $(@D)
> $(CC) -o $@ $^ $(LDFLAGS)
> cp $@ $(PREFIX)/bin
> cp $(ini) $(PREFIX)/bin

clean:
> rm -rf src/*.o
> rm -rf tmp
> rm -rf out
.PHONY: clean


out/whats_mounted: dirs
> mount | grep /dev > $@

out/block_devs: dirs
> lsblk > $@

out/os_info: dirs
> uname -a > $@

out/cc_info: dirs
> $(CC) --version > $@

out/mpi_info: dirs
> mpichversion > $@

out/hdf5_version: dirs
> mkdir -p out
> $(HDF5_DIR)/bin/h5ls --version | cut --d ' ' -f 3 > $@

out/run_fio: dirs
> fio --name=random-write --ioengine=posixaio \
>   --rw=randwrite --bs=1m --size=4g --numjobs=1 --iodepth=1 \
>   --runtime=60 --time_based --end_fsync=1 --output=$@ --directory=tmp

out/baseline: dirs build
> cp src/hdf5_iotest.ini out
> cd out
> LD_LIBRARY_PATH=$(HDF5_DIR)/lib ./hdf5_iotest
> cd ..

out/h5dump: out/baseline
> $(HDF5_DIR)/bin/h5dump -pBH out/hdf5_iotest.h5 > $@

out/h5stat: out/baseline
> $(HDF5_DIR)/bin/h5stat out/hdf5_iotest.h5 > $@

out/gprofile: build dirs
> cp src/hdf5_iotest.ini out
> cd out
> CPUPROFILE_FREQUENCY=10000 \
>   CPUPROFILE_REALTIME=1 \
>   CPUPROFILE=/tmp/pprof.out \
>   LD_LIBRARY_PATH=$(HDF5_DIR)/lib ./hdf5_iotest ./hdf5_iotest.ini ; \
>   google-pprof --callgrind ./hdf5_iotest /tmp/pprof.out > ../tmp/callgrind.out
> cd ..
> callgrind_annotate tmp/callgrind.out > $@

out/darshan: build dirs
> rm -f /tmp/*.darshan
> cp src/hdf5_iotest.ini out
> cd out
> LD_PRELOAD=$(DARSHAN_DIR)/lib/libdarshan.so:$(HDF5_DIR)/lib/libhdf5.so \
>   ./hdf5_iotest ./hdf5_iotest.ini
> cd ..
> $(DARSHAN_DIR)/bin/darshan-parser --all $(DARSHAN_LOGS)/$(DATE)/*.darshan > $@
